{"ast":null,"code":"var _jsxFileName = \"F:\\\\Program Files (x86)\\\\Java\\\\coin-optimizer-app\\\\src\\\\CoinOptimizerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoinOptimizerForm = ({\n  setOptimizedCoins\n}) => {\n  _s();\n  const [targetAmount, setTargetAmount] = useState('');\n  const [coinDenominations, setCoinDenominations] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Submit\");\n    const formData = {\n      targetAmount: parseFloat(targetAmount),\n      coinDenominations: coinDenominations.split(',').map(denomination => parseFloat(denomination.trim()))\n    };\n    try {\n      const response = await fetch('http://localhost:8080/api/coins/optimize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Response from server:', data); // Log the response for debugging\n\n      // Update parent component state with optimized coins\n      setOptimizedCoins(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      // Handle error (display error message, retry logic, etc.)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Coin Optimizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Target Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: targetAmount,\n          onChange: e => setTargetAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Coin Denominations (comma-separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: coinDenominations,\n          onChange: e => setCoinDenominations(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Optimize Coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CoinOptimizerForm, \"F/GEP67hdoG7Jw67Jw8d6JDPDPg=\");\n_c = CoinOptimizerForm;\nexport default CoinOptimizerForm;\nvar _c;\n$RefreshReg$(_c, \"CoinOptimizerForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CoinOptimizerForm","setOptimizedCoins","_s","targetAmount","setTargetAmount","coinDenominations","setCoinDenominations","handleSubmit","e","preventDefault","console","log","formData","parseFloat","split","map","denomination","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["F:/Program Files (x86)/Java/coin-optimizer-app/src/CoinOptimizerForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CoinOptimizerForm = ({ setOptimizedCoins }) => {\r\n  const [targetAmount, setTargetAmount] = useState('');\r\n  const [coinDenominations, setCoinDenominations] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Submit\");\r\n\r\n\r\n    const formData = {\r\n      targetAmount: parseFloat(targetAmount),\r\n      coinDenominations: coinDenominations.split(',').map(denomination => parseFloat(denomination.trim())),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/coins/optimize', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Response from server:', data); // Log the response for debugging\r\n\r\n      // Update parent component state with optimized coins\r\n      setOptimizedCoins(data);\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      // Handle error (display error message, retry logic, etc.)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Coin Optimizer</h2>\r\n      <form onSubmit={handleSubmit }>\r\n        <label>\r\n          Target Amount:\r\n          <input\r\n            type=\"text\"\r\n            value={targetAmount}\r\n            onChange={(e) => setTargetAmount(e.target.value)}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Coin Denominations (comma-separated):\r\n          <input\r\n            type=\"text\"\r\n            value={coinDenominations}\r\n            onChange={(e) => setCoinDenominations(e.target.value)}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Optimize Coins</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoinOptimizerForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}