{"ast":null,"code":"var _jsxFileName = \"F:\\\\Program Files (x86)\\\\Java\\\\coin-optimizer-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComponent = () => {\n  _s();\n  const [targetAmount, setTargetAmount] = useState('');\n  const [coinDenominations, setCoinDenominations] = useState('');\n  const [optimizedResult, setOptimizedResult] = useState([]); // State to store optimized result\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/api/coins/optimize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          targetAmount: parseFloat(targetAmount),\n          coinDenominations: coinDenominations.split(',').map(denomination => parseFloat(denomination))\n        }),\n        mode: 'cors',\n        credentials: 'same-origin'\n      });\n      const data = await response.json();\n      console.log('API response:', data);\n      setOptimizedResult(data); // Update state with API response\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"targetAmount\",\n          className: \"form-label\",\n          children: \"Target Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"targetAmount\",\n          value: targetAmount,\n          onChange: e => setTargetAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"coinDenominations\",\n          className: \"form-label\",\n          children: \"Coin Denominations (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"coinDenominations\",\n          value: coinDenominations,\n          onChange: e => setCoinDenominations(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Optimize Coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Optimized Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: optimizedResult.map((coin, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: coin\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(FormComponent, \"t406uDXfm9A8NJ/lvQNqu2s26qw=\");\n_c = FormComponent;\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FormComponent","_s","targetAmount","setTargetAmount","coinDenominations","setCoinDenominations","optimizedResult","setOptimizedResult","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","parseFloat","split","map","denomination","mode","credentials","data","json","console","log","error","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","required","coin","index","_c","$RefreshReg$"],"sources":["F:/Program Files (x86)/Java/coin-optimizer-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst FormComponent = () => {\n    const [targetAmount, setTargetAmount] = useState('');\n    const [coinDenominations, setCoinDenominations] = useState('');\n    const [optimizedResult, setOptimizedResult] = useState([]); // State to store optimized result\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const response = await fetch('http://localhost:8080/api/coins/optimize', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    targetAmount: parseFloat(targetAmount),\n                    coinDenominations: coinDenominations.split(',').map(denomination => parseFloat(denomination))\n                }),\n                mode: 'cors',\n                credentials: 'same-origin'\n            });\n            const data = await response.json();\n            console.log('API response:', data);\n            setOptimizedResult(data); // Update state with API response\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"targetAmount\" className=\"form-label\">Target Amount:</label>\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        id=\"targetAmount\"\n                        value={targetAmount}\n                        onChange={(e) => setTargetAmount(e.target.value)}\n                        required\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"coinDenominations\" className=\"form-label\">Coin Denominations (comma-separated):</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"coinDenominations\"\n                        value={coinDenominations}\n                        onChange={(e) => setCoinDenominations(e.target.value)}\n                        required\n                    />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Optimize Coins</button>\n            </form>\n\n            {/* Display optimized result */}\n            <div className=\"mt-3\">\n                <h4>Optimized Result:</h4>\n                <ul>\n                    {optimizedResult.map((coin, index) => (\n                        <li key={index}>{coin}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default FormComponent;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}